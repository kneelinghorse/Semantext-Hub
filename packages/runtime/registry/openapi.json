{
  "openapi": "3.0.0",
  "info": {
    "title": "Semantext Hub Registry Service API",
    "version": "1.0.0",
    "description": "SQLite-backed registry with WAL mode for durability. Provides agent registration, resolution, and capability-based querying."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Service health check",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "registry": {
                      "type": "object",
                      "properties": {
                        "driver": {
                          "type": "string",
                          "example": "sqlite"
                        },
                        "wal": {
                          "type": "boolean",
                          "example": true
                        },
                        "schema_version": {
                          "type": "integer",
                          "nullable": true
                        },
                        "records": {
                          "type": "integer",
                          "example": 42
                        }
                      }
                    },
                    "rateLimit": {
                      "type": "object",
                      "properties": {
                        "windowMs": {
                          "type": "integer",
                          "example": 60000
                        },
                        "max": {
                          "type": "integer",
                          "example": 60
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "OpenAPI specification",
        "operationId": "getOpenAPISpec",
        "responses": {
          "200": {
            "description": "OpenAPI specification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v1/registry/{urn}": {
      "get": {
        "summary": "Fetch manifest by URN",
        "operationId": "getManifest",
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Agent URN"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Manifest found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "urn": {
                      "type": "string"
                    },
                    "body": {
                      "type": "object"
                    },
                    "digest": {
                      "type": "string"
                    },
                    "issuer": {
                      "type": "string",
                      "nullable": true
                    },
                    "signature": {
                      "type": "string",
                      "nullable": true
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "provenance": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "unauthorized"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string"
                    },
                    "urn": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Register or update manifest",
        "operationId": "putManifest",
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Agent URN"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "manifest": {
                    "type": "object",
                    "description": "Agent manifest/card"
                  },
                  "provenance": {
                    "type": "object",
                    "description": "DSSE provenance attestation",
                    "nullable": true
                  },
                  "issuer": {
                    "type": "string",
                    "nullable": true
                  },
                  "signature": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Manifest registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "urn": {
                      "type": "string"
                    },
                    "digest": {
                      "type": "string"
                    },
                    "provenance": {
                      "type": "object",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "missing-provenance"
                    },
                    "message": {
                      "type": "string"
                    },
                    "urn": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/resolve": {
      "get": {
        "summary": "Resolve agent by URN",
        "operationId": "resolveAgent",
        "parameters": [
          {
            "name": "urn",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Agent URN to resolve"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent resolved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "urn": {
                      "type": "string"
                    },
                    "manifest": {
                      "type": "object"
                    },
                    "capabilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "digest": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid_query"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/query": {
      "post": {
        "summary": "Query agents by capability",
        "operationId": "queryByCapability",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["capability"],
                "properties": {
                  "capability": {
                    "type": "string",
                    "description": "Capability to search for"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "capability": {
                      "type": "string"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "urn": {
                            "type": "string"
                          },
                          "digest": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid_request"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}

